|Shave_and_a_Haircut
CLOCK_50 => clockBuffer:clockBuffer50MHz.inclk0
CLOCK_27 => Audio_Alt_PLL:audioPllClockGen.inclk0
SW[0] => delayCounter:adcDacControllerStartDelay.reset
SW[0] => clockBuffer:clockBuffer50MHz.areset
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => adc_dac_controller:adcDacController.halfSpeed
SW[7] => adc_dac_controller:adcDacController.twiceSpeed
SW[8] => adc_dac_controller:adcDacController.volumeDown
SW[9] => adc_dac_controller:adcDacController.volumeUp
AUD_ADCLRCK << adc_dac_controller:adcDacController.adcLRSelect
AUD_DACLRCK << adc_dac_controller:adcDacController.dacLRSelect
AUD_DACDAT << adc_dac_controller:adcDacController.dacData
AUD_XCK << Audio_Alt_PLL:audioPllClockGen.c0
AUD_BCLK << adc_dac_controller:adcDacController.bitClock
I2C_SCLK << I2C_SCLK.DB_MAX_OUTPUT_PORT_TYPE
I2C_SDAT <> <UNC>


|Shave_and_a_Haircut|clockBuffer:clockBuffer50MHz
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|Shave_and_a_Haircut|clockBuffer:clockBuffer50MHz|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll.ARESET
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll.LOCKED
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Shave_and_a_Haircut|audioCodecController:audio_Codec_Controller
clock50MHz => clock50KHz:clock50KHzInstance.inClock
clock50MHz => ROMcontroller:ROMcontrollerInstance.clock50MHz
reset => clock50KHz:clock50KHzInstance.reset
reset => SDAT_Control~reg0.PRESET
reset => bitCountEnable.ACLR
reset => incrementROM.ACLR
reset => SCLK_Temp.PRESET
reset => SDAT_Temp.PRESET
reset => dataBitCounter:dataBitCounterInstance.reset
reset => ROMcontroller:ROMcontrollerInstance.reset
reset => I2C_state~9.DATAIN
I2C_SCLK_Internal <= I2C_SCLK_Internal.DB_MAX_OUTPUT_PORT_TYPE
I2C_SDAT_Internal <= SDAT_Temp.DB_MAX_OUTPUT_PORT_TYPE
SDAT_Control <= SDAT_Control~reg0.DB_MAX_OUTPUT_PORT_TYPE
clock50KHz_Out <= clock50KHz:clock50KHzInstance.outClock50KHz


|Shave_and_a_Haircut|audioCodecController:audio_Codec_Controller|clock50KHz:clock50KHzInstance
inClock => output.CLK
inClock => count[0].CLK
inClock => count[1].CLK
inClock => count[2].CLK
inClock => count[3].CLK
inClock => count[4].CLK
inClock => count[5].CLK
inClock => count[6].CLK
inClock => count[7].CLK
inClock => count[8].CLK
reset => output.ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
outClock50KHz <= output.DB_MAX_OUTPUT_PORT_TYPE


|Shave_and_a_Haircut|audioCodecController:audio_Codec_Controller|dataBitCounter:dataBitCounterInstance
countEnable => countWord[0].ENA
countEnable => countBit[4].ENA
countEnable => countBit[3].ENA
countEnable => countBit[2].ENA
countEnable => countBit[1].ENA
countEnable => countBit[0].ENA
countEnable => countWord[3].ENA
countEnable => countWord[2].ENA
countEnable => countWord[1].ENA
reset => countWord[0].ACLR
reset => countWord[1].ACLR
reset => countWord[2].ACLR
reset => countWord[3].ACLR
reset => countBit[0].PRESET
reset => countBit[1].PRESET
reset => countBit[2].PRESET
reset => countBit[3].ACLR
reset => countBit[4].PRESET
clock => countWord[0].CLK
clock => countWord[1].CLK
clock => countWord[2].CLK
clock => countWord[3].CLK
clock => countBit[0].CLK
clock => countBit[1].CLK
clock => countBit[2].CLK
clock => countBit[3].CLK
clock => countBit[4].CLK
currentBitCount[0] <= countBit[0].DB_MAX_OUTPUT_PORT_TYPE
currentBitCount[1] <= countBit[1].DB_MAX_OUTPUT_PORT_TYPE
currentBitCount[2] <= countBit[2].DB_MAX_OUTPUT_PORT_TYPE
currentBitCount[3] <= countBit[3].DB_MAX_OUTPUT_PORT_TYPE
currentBitCount[4] <= countBit[4].DB_MAX_OUTPUT_PORT_TYPE
currentBitCount[5] <= <GND>
currentBitCount[6] <= <GND>
currentBitCount[7] <= <GND>
currentBitCount[8] <= <GND>
currentBitCount[9] <= <GND>
currentBitCount[10] <= <GND>
currentBitCount[11] <= <GND>
currentBitCount[12] <= <GND>
currentBitCount[13] <= <GND>
currentBitCount[14] <= <GND>
currentBitCount[15] <= <GND>
currentBitCount[16] <= <GND>
currentBitCount[17] <= <GND>
currentBitCount[18] <= <GND>
currentBitCount[19] <= <GND>
currentBitCount[20] <= <GND>
currentBitCount[21] <= <GND>
currentBitCount[22] <= <GND>
currentBitCount[23] <= <GND>
currentBitCount[24] <= <GND>
currentBitCount[25] <= <GND>
currentBitCount[26] <= <GND>
currentBitCount[27] <= <GND>
currentBitCount[28] <= <GND>
currentBitCount[29] <= <GND>
currentBitCount[30] <= <GND>
currentBitCount[31] <= <GND>
currentWordCount[0] <= countWord[0].DB_MAX_OUTPUT_PORT_TYPE
currentWordCount[1] <= countWord[1].DB_MAX_OUTPUT_PORT_TYPE
currentWordCount[2] <= countWord[2].DB_MAX_OUTPUT_PORT_TYPE
currentWordCount[3] <= countWord[3].DB_MAX_OUTPUT_PORT_TYPE
currentWordCount[4] <= <GND>
currentWordCount[5] <= <GND>
currentWordCount[6] <= <GND>
currentWordCount[7] <= <GND>
currentWordCount[8] <= <GND>
currentWordCount[9] <= <GND>
currentWordCount[10] <= <GND>
currentWordCount[11] <= <GND>
currentWordCount[12] <= <GND>
currentWordCount[13] <= <GND>
currentWordCount[14] <= <GND>
currentWordCount[15] <= <GND>
currentWordCount[16] <= <GND>
currentWordCount[17] <= <GND>
currentWordCount[18] <= <GND>
currentWordCount[19] <= <GND>
currentWordCount[20] <= <GND>
currentWordCount[21] <= <GND>
currentWordCount[22] <= <GND>
currentWordCount[23] <= <GND>
currentWordCount[24] <= <GND>
currentWordCount[25] <= <GND>
currentWordCount[26] <= <GND>
currentWordCount[27] <= <GND>
currentWordCount[28] <= <GND>
currentWordCount[29] <= <GND>
currentWordCount[30] <= <GND>
currentWordCount[31] <= <GND>


|Shave_and_a_Haircut|audioCodecController:audio_Codec_Controller|ROMcontroller:ROMcontrollerInstance
reset => address_integer[0].ACLR
reset => address_integer[1].ACLR
reset => address_integer[2].ACLR
reset => address_integer[3].ACLR
increment => address_integer[3].ENA
increment => address_integer[2].ENA
increment => address_integer[1].ENA
increment => address_integer[0].ENA
clock50KHz => address_integer[0].CLK
clock50KHz => address_integer[1].CLK
clock50KHz => address_integer[2].CLK
clock50KHz => address_integer[3].CLK
clock50MHz => codecROM:codecROMInstance.clock
ROMword[0] <= codecROM:codecROMInstance.q[0]
ROMword[1] <= codecROM:codecROMInstance.q[1]
ROMword[2] <= codecROM:codecROMInstance.q[2]
ROMword[3] <= codecROM:codecROMInstance.q[3]
ROMword[4] <= codecROM:codecROMInstance.q[4]
ROMword[5] <= codecROM:codecROMInstance.q[5]
ROMword[6] <= codecROM:codecROMInstance.q[6]
ROMword[7] <= codecROM:codecROMInstance.q[7]
ROMword[8] <= codecROM:codecROMInstance.q[8]
ROMword[9] <= codecROM:codecROMInstance.q[9]
ROMword[10] <= codecROM:codecROMInstance.q[10]
ROMword[11] <= codecROM:codecROMInstance.q[11]
ROMword[12] <= codecROM:codecROMInstance.q[12]
ROMword[13] <= codecROM:codecROMInstance.q[13]
ROMword[14] <= codecROM:codecROMInstance.q[14]
ROMword[15] <= codecROM:codecROMInstance.q[15]
ROMword[16] <= codecROM:codecROMInstance.q[16]
ROMword[17] <= codecROM:codecROMInstance.q[17]
ROMword[18] <= codecROM:codecROMInstance.q[18]
ROMword[19] <= codecROM:codecROMInstance.q[19]
ROMword[20] <= codecROM:codecROMInstance.q[20]
ROMword[21] <= codecROM:codecROMInstance.q[21]
ROMword[22] <= codecROM:codecROMInstance.q[22]
ROMword[23] <= codecROM:codecROMInstance.q[23]


|Shave_and_a_Haircut|audioCodecController:audio_Codec_Controller|ROMcontroller:ROMcontrollerInstance|codecROM:codecROMInstance
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
clock => altsyncram:altsyncram_component.clock0
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]
q[8] <= altsyncram:altsyncram_component.q_a[8]
q[9] <= altsyncram:altsyncram_component.q_a[9]
q[10] <= altsyncram:altsyncram_component.q_a[10]
q[11] <= altsyncram:altsyncram_component.q_a[11]
q[12] <= altsyncram:altsyncram_component.q_a[12]
q[13] <= altsyncram:altsyncram_component.q_a[13]
q[14] <= altsyncram:altsyncram_component.q_a[14]
q[15] <= altsyncram:altsyncram_component.q_a[15]
q[16] <= altsyncram:altsyncram_component.q_a[16]
q[17] <= altsyncram:altsyncram_component.q_a[17]
q[18] <= altsyncram:altsyncram_component.q_a[18]
q[19] <= altsyncram:altsyncram_component.q_a[19]
q[20] <= altsyncram:altsyncram_component.q_a[20]
q[21] <= altsyncram:altsyncram_component.q_a[21]
q[22] <= altsyncram:altsyncram_component.q_a[22]
q[23] <= altsyncram:altsyncram_component.q_a[23]


|Shave_and_a_Haircut|audioCodecController:audio_Codec_Controller|ROMcontroller:ROMcontrollerInstance|codecROM:codecROMInstance|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_a[8] => ~NO_FANOUT~
data_a[9] => ~NO_FANOUT~
data_a[10] => ~NO_FANOUT~
data_a[11] => ~NO_FANOUT~
data_a[12] => ~NO_FANOUT~
data_a[13] => ~NO_FANOUT~
data_a[14] => ~NO_FANOUT~
data_a[15] => ~NO_FANOUT~
data_a[16] => ~NO_FANOUT~
data_a[17] => ~NO_FANOUT~
data_a[18] => ~NO_FANOUT~
data_a[19] => ~NO_FANOUT~
data_a[20] => ~NO_FANOUT~
data_a[21] => ~NO_FANOUT~
data_a[22] => ~NO_FANOUT~
data_a[23] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_7671:auto_generated.address_a[0]
address_a[1] => altsyncram_7671:auto_generated.address_a[1]
address_a[2] => altsyncram_7671:auto_generated.address_a[2]
address_a[3] => altsyncram_7671:auto_generated.address_a[3]
address_a[4] => altsyncram_7671:auto_generated.address_a[4]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_7671:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_7671:auto_generated.q_a[0]
q_a[1] <= altsyncram_7671:auto_generated.q_a[1]
q_a[2] <= altsyncram_7671:auto_generated.q_a[2]
q_a[3] <= altsyncram_7671:auto_generated.q_a[3]
q_a[4] <= altsyncram_7671:auto_generated.q_a[4]
q_a[5] <= altsyncram_7671:auto_generated.q_a[5]
q_a[6] <= altsyncram_7671:auto_generated.q_a[6]
q_a[7] <= altsyncram_7671:auto_generated.q_a[7]
q_a[8] <= altsyncram_7671:auto_generated.q_a[8]
q_a[9] <= altsyncram_7671:auto_generated.q_a[9]
q_a[10] <= altsyncram_7671:auto_generated.q_a[10]
q_a[11] <= altsyncram_7671:auto_generated.q_a[11]
q_a[12] <= altsyncram_7671:auto_generated.q_a[12]
q_a[13] <= altsyncram_7671:auto_generated.q_a[13]
q_a[14] <= altsyncram_7671:auto_generated.q_a[14]
q_a[15] <= altsyncram_7671:auto_generated.q_a[15]
q_a[16] <= altsyncram_7671:auto_generated.q_a[16]
q_a[17] <= altsyncram_7671:auto_generated.q_a[17]
q_a[18] <= altsyncram_7671:auto_generated.q_a[18]
q_a[19] <= altsyncram_7671:auto_generated.q_a[19]
q_a[20] <= altsyncram_7671:auto_generated.q_a[20]
q_a[21] <= altsyncram_7671:auto_generated.q_a[21]
q_a[22] <= altsyncram_7671:auto_generated.q_a[22]
q_a[23] <= altsyncram_7671:auto_generated.q_a[23]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|Shave_and_a_Haircut|audioCodecController:audio_Codec_Controller|ROMcontroller:ROMcontrollerInstance|codecROM:codecROMInstance|altsyncram:altsyncram_component|altsyncram_7671:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[0] => ram_block1a12.PORTAADDR
address_a[0] => ram_block1a13.PORTAADDR
address_a[0] => ram_block1a14.PORTAADDR
address_a[0] => ram_block1a15.PORTAADDR
address_a[0] => ram_block1a16.PORTAADDR
address_a[0] => ram_block1a17.PORTAADDR
address_a[0] => ram_block1a18.PORTAADDR
address_a[0] => ram_block1a19.PORTAADDR
address_a[0] => ram_block1a20.PORTAADDR
address_a[0] => ram_block1a21.PORTAADDR
address_a[0] => ram_block1a22.PORTAADDR
address_a[0] => ram_block1a23.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[1] => ram_block1a12.PORTAADDR1
address_a[1] => ram_block1a13.PORTAADDR1
address_a[1] => ram_block1a14.PORTAADDR1
address_a[1] => ram_block1a15.PORTAADDR1
address_a[1] => ram_block1a16.PORTAADDR1
address_a[1] => ram_block1a17.PORTAADDR1
address_a[1] => ram_block1a18.PORTAADDR1
address_a[1] => ram_block1a19.PORTAADDR1
address_a[1] => ram_block1a20.PORTAADDR1
address_a[1] => ram_block1a21.PORTAADDR1
address_a[1] => ram_block1a22.PORTAADDR1
address_a[1] => ram_block1a23.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[2] => ram_block1a12.PORTAADDR2
address_a[2] => ram_block1a13.PORTAADDR2
address_a[2] => ram_block1a14.PORTAADDR2
address_a[2] => ram_block1a15.PORTAADDR2
address_a[2] => ram_block1a16.PORTAADDR2
address_a[2] => ram_block1a17.PORTAADDR2
address_a[2] => ram_block1a18.PORTAADDR2
address_a[2] => ram_block1a19.PORTAADDR2
address_a[2] => ram_block1a20.PORTAADDR2
address_a[2] => ram_block1a21.PORTAADDR2
address_a[2] => ram_block1a22.PORTAADDR2
address_a[2] => ram_block1a23.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[3] => ram_block1a12.PORTAADDR3
address_a[3] => ram_block1a13.PORTAADDR3
address_a[3] => ram_block1a14.PORTAADDR3
address_a[3] => ram_block1a15.PORTAADDR3
address_a[3] => ram_block1a16.PORTAADDR3
address_a[3] => ram_block1a17.PORTAADDR3
address_a[3] => ram_block1a18.PORTAADDR3
address_a[3] => ram_block1a19.PORTAADDR3
address_a[3] => ram_block1a20.PORTAADDR3
address_a[3] => ram_block1a21.PORTAADDR3
address_a[3] => ram_block1a22.PORTAADDR3
address_a[3] => ram_block1a23.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[4] => ram_block1a12.PORTAADDR4
address_a[4] => ram_block1a13.PORTAADDR4
address_a[4] => ram_block1a14.PORTAADDR4
address_a[4] => ram_block1a15.PORTAADDR4
address_a[4] => ram_block1a16.PORTAADDR4
address_a[4] => ram_block1a17.PORTAADDR4
address_a[4] => ram_block1a18.PORTAADDR4
address_a[4] => ram_block1a19.PORTAADDR4
address_a[4] => ram_block1a20.PORTAADDR4
address_a[4] => ram_block1a21.PORTAADDR4
address_a[4] => ram_block1a22.PORTAADDR4
address_a[4] => ram_block1a23.PORTAADDR4
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock0 => ram_block1a12.CLK0
clock0 => ram_block1a13.CLK0
clock0 => ram_block1a14.CLK0
clock0 => ram_block1a15.CLK0
clock0 => ram_block1a16.CLK0
clock0 => ram_block1a17.CLK0
clock0 => ram_block1a18.CLK0
clock0 => ram_block1a19.CLK0
clock0 => ram_block1a20.CLK0
clock0 => ram_block1a21.CLK0
clock0 => ram_block1a22.CLK0
clock0 => ram_block1a23.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT
q_a[8] <= ram_block1a8.PORTADATAOUT
q_a[9] <= ram_block1a9.PORTADATAOUT
q_a[10] <= ram_block1a10.PORTADATAOUT
q_a[11] <= ram_block1a11.PORTADATAOUT
q_a[12] <= ram_block1a12.PORTADATAOUT
q_a[13] <= ram_block1a13.PORTADATAOUT
q_a[14] <= ram_block1a14.PORTADATAOUT
q_a[15] <= ram_block1a15.PORTADATAOUT
q_a[16] <= ram_block1a16.PORTADATAOUT
q_a[17] <= ram_block1a17.PORTADATAOUT
q_a[18] <= ram_block1a18.PORTADATAOUT
q_a[19] <= ram_block1a19.PORTADATAOUT
q_a[20] <= ram_block1a20.PORTADATAOUT
q_a[21] <= ram_block1a21.PORTADATAOUT
q_a[22] <= ram_block1a22.PORTADATAOUT
q_a[23] <= ram_block1a23.PORTADATAOUT


|Shave_and_a_Haircut|delayCounter:adcDacControllerStartDelay
reset => resetAdc~reg0.ACLR
reset => delayCounterInternalCount[0].ACLR
reset => delayCounterInternalCount[1].ACLR
reset => delayCounterInternalCount[2].ACLR
reset => delayCounterInternalCount[3].ACLR
reset => delayCounterInternalCount[4].ACLR
reset => delayCounterInternalCount[5].ACLR
reset => delayCounterInternalCount[6].ACLR
reset => delayCounterInternalCount[7].ACLR
reset => delayCounterInternalCount[8].ACLR
reset => delayCounterInternalCount[9].ACLR
reset => delayCounterInternalCount[10].ACLR
reset => delayCounterInternalCount[11].ACLR
reset => delayCounterInternalCount[12].ACLR
reset => delayCounterInternalCount[13].ACLR
reset => delayCounterInternalCount[14].ACLR
reset => delayCounterInternalCount[15].ACLR
reset => delayCounterInternalCount[16].ACLR
reset => delayCounterInternalCount[17].ACLR
reset => delayCounterInternalCount[18].ACLR
reset => delayCounterInternalCount[19].ACLR
reset => delayCounterInternalCount[20].ACLR
reset => delayCounterInternalCount[21].ACLR
reset => delayCounterInternalCount[22].ACLR
reset => delayCounterInternalCount[23].ACLR
reset => delayCounterInternalCount[24].ACLR
reset => delayCounterInternalCount[25].ACLR
reset => delayCounterInternalCount[26].ACLR
reset => delayCounterInternalCount[27].ACLR
reset => delayCounterInternalCount[28].ACLR
reset => delayCounterInternalCount[29].ACLR
reset => delayCounterInternalCount[30].ACLR
reset => delayCounterInternalCount[31].ACLR
clock => resetAdc~reg0.CLK
clock => delayCounterInternalCount[0].CLK
clock => delayCounterInternalCount[1].CLK
clock => delayCounterInternalCount[2].CLK
clock => delayCounterInternalCount[3].CLK
clock => delayCounterInternalCount[4].CLK
clock => delayCounterInternalCount[5].CLK
clock => delayCounterInternalCount[6].CLK
clock => delayCounterInternalCount[7].CLK
clock => delayCounterInternalCount[8].CLK
clock => delayCounterInternalCount[9].CLK
clock => delayCounterInternalCount[10].CLK
clock => delayCounterInternalCount[11].CLK
clock => delayCounterInternalCount[12].CLK
clock => delayCounterInternalCount[13].CLK
clock => delayCounterInternalCount[14].CLK
clock => delayCounterInternalCount[15].CLK
clock => delayCounterInternalCount[16].CLK
clock => delayCounterInternalCount[17].CLK
clock => delayCounterInternalCount[18].CLK
clock => delayCounterInternalCount[19].CLK
clock => delayCounterInternalCount[20].CLK
clock => delayCounterInternalCount[21].CLK
clock => delayCounterInternalCount[22].CLK
clock => delayCounterInternalCount[23].CLK
clock => delayCounterInternalCount[24].CLK
clock => delayCounterInternalCount[25].CLK
clock => delayCounterInternalCount[26].CLK
clock => delayCounterInternalCount[27].CLK
clock => delayCounterInternalCount[28].CLK
clock => delayCounterInternalCount[29].CLK
clock => delayCounterInternalCount[30].CLK
clock => delayCounterInternalCount[31].CLK
resetAdc <= resetAdc~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Shave_and_a_Haircut|Audio_Alt_PLL:audioPllClockGen
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|Shave_and_a_Haircut|Audio_Alt_PLL:audioPllClockGen|altpll:altpll_component
inclk[0] => Audio_Alt_PLL_altpll:auto_generated.inclk[0]
inclk[1] => Audio_Alt_PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => Audio_Alt_PLL_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|Shave_and_a_Haircut|Audio_Alt_PLL:audioPllClockGen|altpll:altpll_component|Audio_Alt_PLL_altpll:auto_generated
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|Shave_and_a_Haircut|adc_dac_controller:adcDacController
reset => noteNum[0].ACLR
reset => noteNum[1].ACLR
reset => noteNum[2].ACLR
reset => noteNum[3].ACLR
reset => noteNum[4].ACLR
reset => rightOutCounter[0].PRESET
reset => rightOutCounter[1].PRESET
reset => rightOutCounter[2].PRESET
reset => rightOutCounter[3].PRESET
reset => leftOutCounter[0].PRESET
reset => leftOutCounter[1].PRESET
reset => leftOutCounter[2].PRESET
reset => leftOutCounter[3].PRESET
reset => dataCount.ACLR
reset => internalLRSelect.ACLR
reset => LRCounter[0].ACLR
reset => LRCounter[1].ACLR
reset => LRCounter[2].ACLR
reset => LRCounter[3].ACLR
reset => LRCounter[4].ACLR
reset => rightChannel[0].ACLR
reset => rightChannel[1].ACLR
reset => rightChannel[2].ACLR
reset => rightChannel[3].ACLR
reset => rightChannel[4].ACLR
reset => rightChannel[5].ACLR
reset => rightChannel[6].ACLR
reset => rightChannel[7].ACLR
reset => rightChannel[8].ACLR
reset => rightChannel[9].ACLR
reset => rightChannel[10].ACLR
reset => rightChannel[11].ACLR
reset => rightChannel[12].ACLR
reset => rightChannel[13].ACLR
reset => rightChannel[14].ACLR
reset => rightChannel[15].ACLR
reset => leftChannel[0].ACLR
reset => leftChannel[1].ACLR
reset => leftChannel[2].ACLR
reset => leftChannel[3].ACLR
reset => leftChannel[4].ACLR
reset => leftChannel[5].ACLR
reset => leftChannel[6].ACLR
reset => leftChannel[7].ACLR
reset => leftChannel[8].ACLR
reset => leftChannel[9].ACLR
reset => leftChannel[10].ACLR
reset => leftChannel[11].ACLR
reset => leftChannel[12].ACLR
reset => leftChannel[13].ACLR
reset => leftChannel[14].ACLR
reset => leftChannel[15].ACLR
reset => internalBitClock.ACLR
reset => bitClockCounter[0].ACLR
reset => bitClockCounter[1].ACLR
reset => bitClockCounter[2].ACLR
reset => bitClockCounter[3].ACLR
reset => bitClockCounter[4].ACLR
reset => bitClockCounter[5].ACLR
reset => bitClockCounter[6].ACLR
reset => bitClockCounter[7].ACLR
reset => dacData~reg0.ACLR
reset => G4Counter[0].ACLR
reset => G4Counter[1].ACLR
reset => G4Counter[2].ACLR
reset => G4Counter[3].ACLR
reset => G4Counter[4].ACLR
reset => G4Counter[5].ACLR
reset => G4Counter[6].ACLR
reset => beatCounter[0].ACLR
reset => beatCounter[1].ACLR
reset => beatCounter[2].ACLR
reset => beatCounter[3].ACLR
reset => beatCounter[4].ACLR
reset => beatCounter[5].ACLR
reset => beatCounter[6].ACLR
reset => beatCounter[7].ACLR
reset => beatCounter[8].ACLR
reset => beatCounter[9].ACLR
reset => beatCounter[10].ACLR
reset => beatCounter[11].ACLR
reset => beatCounter[12].ACLR
reset => beatCounter[13].ACLR
reset => beatCounter[14].ACLR
reset => C5Counter[0].ACLR
reset => C5Counter[1].ACLR
reset => C5Counter[2].ACLR
reset => C5Counter[3].ACLR
reset => C5Counter[4].ACLR
reset => C5Counter[5].ACLR
reset => C5Counter[6].ACLR
reset => B4Counter[0].ACLR
reset => B4Counter[1].ACLR
reset => B4Counter[2].ACLR
reset => B4Counter[3].ACLR
reset => B4Counter[4].ACLR
reset => B4Counter[5].ACLR
reset => B4Counter[6].ACLR
reset => GSharp4Counter[0].ACLR
reset => GSharp4Counter[1].ACLR
reset => GSharp4Counter[2].ACLR
reset => GSharp4Counter[3].ACLR
reset => GSharp4Counter[4].ACLR
reset => GSharp4Counter[5].ACLR
reset => GSharp4Counter[6].ACLR
reset => shaveAndAHaircut~3.DATAIN
reset => signalValue[15].ENA
reset => signalValue[14].ENA
reset => signalValue[13].ENA
reset => signalValue[12].ENA
reset => signalValue[11].ENA
reset => signalValue[10].ENA
reset => signalValue[9].ENA
reset => signalValue[8].ENA
reset => signalValue[7].ENA
reset => signalValue[6].ENA
reset => signalValue[5].ENA
reset => signalValue[4].ENA
reset => signalValue[3].ENA
reset => signalValue[2].ENA
reset => signalValue[1].ENA
reset => signalValue[0].ENA
halfSpeed => beatLimit[14].IN0
halfSpeed => process_4.IN0
twiceSpeed => process_4.IN1
twiceSpeed => beatLimit[14].IN1
volumeDown => process_2.IN0
volumeDown => process_2.IN0
volumeUp => process_2.IN1
volumeUp => process_2.IN1
audioClock => internalBitClock.CLK
audioClock => bitClockCounter[0].CLK
audioClock => bitClockCounter[1].CLK
audioClock => bitClockCounter[2].CLK
audioClock => bitClockCounter[3].CLK
audioClock => bitClockCounter[4].CLK
audioClock => bitClockCounter[5].CLK
audioClock => bitClockCounter[6].CLK
audioClock => bitClockCounter[7].CLK
bitClock <= internalBitClock.DB_MAX_OUTPUT_PORT_TYPE
adcLRSelect <= internalLRSelect.DB_MAX_OUTPUT_PORT_TYPE
dacLRSelect <= internalLRSelect.DB_MAX_OUTPUT_PORT_TYPE
dacData <= dacData~reg0.DB_MAX_OUTPUT_PORT_TYPE


